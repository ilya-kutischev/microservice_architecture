version: '3.7'
services:
  auth:
    build:
      context: authGateway
      dockerfile: Dockerfile.auth
    volumes:
      - ./authGateway:/app
    restart: always
    environment:
      - POSTGRES_USER:postgres
      - POSTGRES_PASSWORD:postgres
    ports:
      - 5000:5000
    depends_on:
      - postgres

  postgres:
    restart: always
    ports:
      - 5432:5432
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER:postgres
      - POSTGRES_PASSWORD:postgres
      - POSTGRES_DB:postgres
      - POSTGRES_HOST:postgres
      - POSTGRES_HOST_AUTH_METHOD:trust
      - POSTGRES_ADMIN_USER:admin
      - POSTGRES_ADMIN_PASSWORD:admin

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    restart: always
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "geostream:1:1"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

# ELASTIC SEARCH API
  search:
    restart: always
    build:
      context: searchService
      dockerfile: Dockerfile.search
    volumes:
      - ./searchService:/app
#    environment:

    ports:
      - 5001:5001
    depends_on:
#      - kafka
#      - zookeeper
      - auth
      - postgres

  elasticsearch:
    restart: always
    image: elasticsearch:8.3.3
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ELASTIC_USERNAME=root
      - ELASTIC_PASSWORD=root
      - ELASTIC_PORT=9200
      - ELASTIC_HOST=elasticsearch
    ports:
      - "9200:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

  stats:
    restart: always
    build:
      context: statistics
      dockerfile: Dockerfile.stats
    volumes:
      - ./statistics:/app
    ports:
      - 5002:5002
    depends_on:
      - auth
      - search
      - mongodb

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ~/apps/mongo:/data/db

    environment:
      MONGO_INITDB_DATABASE: statistics
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: root
#      MONGO_INITDB_ROOT_PORT: 27017


volumes:
  postgres_data:
    driver: local
  elastic_data:
  mongo: